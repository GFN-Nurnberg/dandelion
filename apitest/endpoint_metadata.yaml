fixtures:
  - ConfigFixture
  - SampleDataFixture

defaults:
  ssl: False
  request_headers:
    content-type: application/json
    accept: application/json

vars:
  - &username 'gabbi_user'
  - &password 'dandelion'

tests:
  - name: create_user
    url: /api/v1/users
    method: POST
    data:
      username: *username
      password: *password
      is_active: true
    status: 200
    response_json_paths:
      $.username: *username

  - name: user_login
    url: /api/v1/login
    method: POST
    data:
      username: *username
      password: *password
    status: 200
    response_json_paths:
      $.token_type: bearer

  - name: create_service_type
    url: /api/v1/service_types
    method: POST
    request_headers:
      Authorization: Bearer $HISTORY['user_login'].$RESPONSE['$.access_token']
    data:
      name: "service_type_A"
      description: "service_type_A_description"
    status: 201
    response_json_paths:
      $.name: "service_type_A"
      $.description: "service_type_A_description"

  - name: create_service
    url: /api/v1/services
    method: POST
    request_headers:
      Authorization: Bearer $HISTORY['user_login'].$RESPONSE['$.access_token']
    data:
      name: "service_A"
      type_id: $HISTORY['create_service_type'].$RESPONSE['$.id']
      vendor: "vendor_A"
      description: "service_A_description"
    status: 201
    response_json_paths:
      $.name: "service_A"
      $.type_id: $HISTORY['create_service_type'].$RESPONSE['$.id']
      $.vendor: "vendor_A"
      $.description: "service_A_description"

  - name: create_endpoint
    url: /api/v1/endpoints
    method: POST
    request_headers:
      Authorization: Bearer $HISTORY['user_login'].$RESPONSE['$.access_token']
    data:
      service_id: $HISTORY['create_service'].$RESPONSE['$.id']
      enabled: true
      url: "url_A"
    status: 201
    response_json_paths:
      $.service_id: $HISTORY['create_service'].$RESPONSE['$.id']
      $.enabled: true
      $.url: "url_A"

  - name: create_endpoint_metadata
    url: /api/v1/endpoint_metadatas
    method: POST
    request_headers:
      Authorization: Bearer $HISTORY['user_login'].$RESPONSE['$.access_token']
    data:
      endpoint_id: $HISTORY['create_endpoint'].$RESPONSE['$.id']
      key: "key_A"
      value: "value_A"
    status: 201
    response_json_paths:
      $.endpoint_id: $HISTORY['create_endpoint'].$RESPONSE['$.id']
      $.key: "key_A"
      $.value: "value_A"

  - name: endpoint_metadata_get
    url: /api/v1/endpoint_metadatas/$HISTORY['create_endpoint_metadata'].$RESPONSE['$.id']
    method: GET
    request_headers:
      Authorization: Bearer $HISTORY['user_login'].$RESPONSE['$.access_token']
    status: 200
    response_json_paths:
      $.endpoint_id: $HISTORY['create_endpoint'].$RESPONSE['$.id']
      $.key: "key_A"
      $.value: "value_A"

  - name: endpoint_metadata_list
    url: /api/v1/endpoint_metadatas
    method: GET
    request_headers:
      Authorization: Bearer $HISTORY['user_login'].$RESPONSE['$.access_token']
    status: 200
    response_json_paths:
      $.total: 1
      $.data[0].endpoint_id: $HISTORY['create_endpoint'].$RESPONSE['$.id']
      $.data[0].key: "key_A"
      $.data[0].value: "value_A"

  - name: endpoint_metadata_update
    url: /api/v1/endpoint_metadatas/$HISTORY['create_endpoint_metadata'].$RESPONSE['$.id']
    method: PUT
    request_headers:
      Authorization: Bearer $HISTORY['user_login'].$RESPONSE['$.access_token']
    data:
      endpoint_id: $HISTORY['create_endpoint'].$RESPONSE['$.id']
      key: "key_B"
      value: "value_B"
    status: 200

  - name: endpoint_get
    url: /api/v1/endpoint_metadatas/$HISTORY['create_endpoint_metadata'].$RESPONSE['$.id']
    method: GET
    request_headers:
      Authorization: Bearer $HISTORY['user_login'].$RESPONSE['$.access_token']
    status: 200
    response_json_paths:
      $.endpoint_id: $HISTORY['create_endpoint'].$RESPONSE['$.id']
      $.key: "key_B"
      $.value: "value_B"

  - name: delete_endpoint_metadata
    url: /api/v1/endpoint_metadatas/$HISTORY['create_endpoint_metadata'].$RESPONSE['$.id']
    method: DELETE
    request_headers:
      Authorization: Bearer $HISTORY['user_login'].$RESPONSE['$.access_token']
    status: 204

  - name: delete_endpoint
    url: /api/v1/endpoints/$HISTORY['create_endpoint'].$RESPONSE['$.id']
    method: DELETE
    request_headers:
      Authorization: Bearer $HISTORY['user_login'].$RESPONSE['$.access_token']
    status: 204

  - name: delete_service
    url: /api/v1/services/$HISTORY['create_service'].$RESPONSE['$.id']
    method: DELETE
    request_headers:
      Authorization: Bearer $HISTORY['user_login'].$RESPONSE['$.access_token']
    status: 204

  - name: delete_service_type
    url: /api/v1/service_types/$HISTORY['create_service_type'].$RESPONSE['$.id']
    method: DELETE
    request_headers:
      Authorization: Bearer $HISTORY['user_login'].$RESPONSE['$.access_token']
    status: 204

  - name: delete_user
    url: /api/v1/users/$HISTORY['create_user'].$RESPONSE['$.id']
    method: DELETE
    request_headers:
      Authorization: Bearer $HISTORY['user_login'].$RESPONSE['$.access_token']
    status: 204
